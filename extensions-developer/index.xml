<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extensions Developer on Project Flogo - Docs and Tutorials</title>
    <link>https://tibcosoftware.github.io/flogo/extensions-developer/</link>
    <description>Recent content in Extensions Developer on Project Flogo - Docs and Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Apr 2016 16:50:16 +0200</lastBuildDate>
    
	<atom:link href="https://tibcosoftware.github.io/flogo/extensions-developer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building your first activity</title>
      <link>https://tibcosoftware.github.io/flogo/extensions-developer/create-activity/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/extensions-developer/create-activity/</guid>
      <description>Adding a new activity to Flogo is quite easy and we&amp;rsquo;ve outlined the steps for you in this howto guide. This guide will walk you through the steps required to create a simple activity which can also be used in the Flogo web UI. We&amp;rsquo;ll be leveraging the flogogen scafolding CLI available via the flogo-cli repo. See below for details on installing Flogo + CLI.
Prerequisites Before you can get started with this guide you need to make sure you have the right prerequisites installed:</description>
    </item>
    
    <item>
      <title>Application Configuration Provider</title>
      <link>https://tibcosoftware.github.io/flogo/extensions-developer/config-provider/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/extensions-developer/config-provider/</guid>
      <description>Unless you want to provide the application configuration (for example: flogo.json) in a different way or format you should not worry about this feature.
We have provided an extension mechanism for you to override the default way of providing the application configuration if needed.
Topics  Default behavior Embedded configuration Custom configuration  Default behavior Out of the box, the default behavior will be as follows:
 Configuration will be passed to the engine in the JSON format Default path for the JSON file will be in the same directory as the application&amp;rsquo;s binary Default name for the JSON file will be &amp;ldquo;flogo.</description>
    </item>
    
    <item>
      <title>Continuously testing Flogo activities</title>
      <link>https://tibcosoftware.github.io/flogo/extensions-developer/continuously-testing-flogo-activities/</link>
      <pubDate>Sat, 09 Apr 2016 16:50:16 +0200</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/extensions-developer/continuously-testing-flogo-activities/</guid>
      <description>Depending on where you store the source code and how publicly you want to have the code available you have a few options. In this post I&amp;rsquo;ll use Jenkins to show how I can test activities with a local git server and I&amp;rsquo;ll use Travis-CI for activities on GitHub
Intro Before we begin let me quickly walk through my project structure as some of the scripts are based on that structure.</description>
    </item>
    
  </channel>
</rss>